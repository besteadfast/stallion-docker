name: Build and Push Docker Images
on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      latest:
        required: true
        type: string
      filters:
        required: true
        type: string
jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Filter paths with changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: ${{ inputs.filters }}
  build:
    needs: changes
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        version: ${{ fromJSON(needs.changes.outputs.images) }}
    if: ${{ needs.changes.outputs.images != '[]' }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Get version number
        uses: mad9000/actions-find-and-replace-string@2
        id: version
        with:
          source: ${{ matrix.version }}
          find: '${{ inputs.image-name }}-'
          replace: ''
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Generate Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: besteadfast/stallion-${{ inputs.image-name }}
          tags: |
            type=raw,value=${{ steps.version.outputs.value }},enable=true,priority=${{ steps.version.outputs.value }}
            type=raw,value=latest,enable=${{ steps.version.outputs.value == inputs.LATEST }},priority=10000
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ inputs.image-name }}/${{ steps.version.outputs.value }}
          file: ${{ inputs.image-name }}/${{ steps.version.outputs.value }}/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      - name: Update Docker image description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ env.IMAGE }}
          readme-filepath: ${{ inputs.image-name }}/${{ steps.version.outputs.value }}/README.md
          short-description: ${{ github.event.repository.description }}
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache